A function object is a function that has a state.That is, when you invoke the function multiple times,it can store some state.If you think of a global function,under normal circumstances it cannot store any state.In C++ we can implement a function object by overloadingthe function call operator.The syntax of invocation of a function object is quitesimilar to invocation of a global function.That is why function objects can be used as Callbacks,and they can act as a replacement for function pointers.Function objects have several advantages over function pointers.One is they are usually faster than function pointers.Second is they can have state,while global functions cannot have state.Let's understand function objects more clearly through examples.Let's create a function object here.So we'll create a structure or a classDoesn't matter what you use.Will call this.PT print and this will contain.A function that is the overloaded function call operator.And then here we can.Print the string surrounded with.Some characters.And then create the instance of PT print.Invocation of a function object is quite similar to invocationof a global function.So to invoke the function call operator through the PTprint object,we have to. Use this syntax.So this PT is an object and it is invokingthe function call operator.You see this syntax resembles a global function.Come. Let's run this.And this is output.This is not a global function call,but rather a member function call AndSince this is a member function,it can store state. For example,we can create a counter variable here and.We can increment this when the function call operator isinvolved.And then. Will print account here.Let's run this.And you can see it shows the count as three.So for every invocation of the function object.This member variable stored a state.Now we could not do this with a global function.Another thing is that maybe for the second location Iwant to use a different object.And then will run the program again.Now this time the count is only two.So for every invocation of this member functionCount we'll have different state depending on the object thathas invoked this function.We might attempt doing the same thing with global functions.So let's try to function here.Here will create a static integer variable and will incrementit here.Now we can invoke this function as.But the problem is we cannot access this integer variableI.So even if we call PT print global function